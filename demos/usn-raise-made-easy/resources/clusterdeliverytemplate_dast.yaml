apiVersion: carto.run/v1alpha1
kind: ClusterDeploymentTemplate
metadata:
  name: app-dast
spec:
  healthRule:
    multiMatch:
      healthy:
        matchFields:
          - key: status.conditions[?(@.type=="Succeeded"].status
            messagePath: .status.conditions[?(@.type=="Succeeded")].message
            operator: In
            values:
              - "True"
      unhealthy:
        matchFields:
          - key: status.conditions[?(@.type=="Succeeded"].status
            messagePath: .status.conditions[?(@.type=="Succeeded")].message
            operator: In
            values:
              - "False"
  lifecycle: mutable
  observedCompletion:
    failed:
      key: .status.conditions[?(@.type=="Suceeded")].status
      value: "False"
    succeeded:
      key: .status.conditions[?(@.type=="Suceeded")].status
      value: "True"
  params:
  - default: default
    name: serviceAccount
  ytt: |
    #@ load("@ytt:data", "data")
    #@ load("@ytt:assert", "assert")

    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.deliverable.metadata, "labels"):
    #@     labels.update(data.values.deliverable.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end

    ---
    apiVersion: carto.run/v1alpha1
    kind: Runnable
    metadata:
      name: #@ data.values.deliverable.metadata.name + "-dast-scan"
      labels: #@ merge_labels({ "app.kubernetes.io/component": "deploy" })
    spec:
      runTemplateRef:
        name: tekton-taskrun
      inputs:
        serviceAccount: #@ data.values.params.serviceAccount
        taskRef:
          kind: ClusterTask
          name: perform-dast-scan
      params:
        - name: url
          value: #@ data.values.deployment.url or assert.fail("URL is missing")
