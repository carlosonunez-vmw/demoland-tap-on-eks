#!/usr/bin/env bash
source "$(dirname "$0")/../include/config.sh"
set -eo pipefail
TERRAFORM_STATE_BUCKET_REGION="$(get_from_config '.config.terraform.aws.bucket.region')" || exit 1
TERRAFORM_STATE_BUCKET_NAME="$(get_from_config '.config.terraform.aws.bucket.name')" || exit 1
TERRAFORM_STATE_BUCKET_KEY="$(get_from_config '.config.terraform.aws.bucket.key')" || exit 1
DOMAIN_NAME="$(get_from_config '.config.dns.root_zone')" || exit 1
TERRAFORM_BACKEND_CONF_LOCATION="$(dirname "$0")/../terraform.tfbackend"
TERRAFORM_VARS_LOCATION="$(dirname "$0")/../terraform.tfvars"

aws_region() {
  test -n "$TERRAFORM_STATE_BUCKET_REGION" && { echo "$TERRAFORM_STATE_BUCKET_REGION" && return 0; }
  test -n "$AWS_DEFAULT_REGION" && { echo "$AWS_DEFAULT_REGION" && return 0; }
  >&2 echo "ERROR: Terraform state bucket not found. \
Define it in config.yaml or use \$AWS_REGION"
  return 1
}

region="$(aws_region)" || exit 1
env_id="$(get_current_demo_environment_id)" || exit 1
>&2 echo "========> Writing backend to $TERRAFORM_BACKEND_CONF_LOCATION"
cat >"$TERRAFORM_BACKEND_CONF_LOCATION" <<-EOF
# Automatically generated by scripts/create_backend.sh. Do not edit.

bucket = "$TERRAFORM_STATE_BUCKET_NAME"
key = "$TERRAFORM_STATE_BUCKET_KEY"
region = "$region"
EOF

>&2 echo "=======> Writing vars file to $TERRAFORM_VARS_LOCATION"
cat >"$TERRAFORM_VARS_LOCATION" <<-EOF
# Automatically generated by scripts/create_backend.sh. Do not edit.

domain_name = "$DOMAIN_NAME"
customer_name = "$env_id"
EOF
